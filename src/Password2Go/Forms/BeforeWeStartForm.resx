<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="telerikMetroBlueTheme1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="office2013DarkTheme1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>194, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAASCwAAEgsAAAAAAAAAAAAAAAAAMwAAADMAAAAzAAAAMwAAADMAAAAAAAAAAAAAAAAAAAAAAAAAMwAA
        ADMAAAAzAAAAMwAAADMAAAAzAAAAMy92tv8uc7T/L3Oz/zBztP8wd7b/AAAAMzZ7uQAQdrQAE3a0ABN0
        sv8ScbD/EXGv/xFxr/8Rca//EnGw/xN0sv8vdbX/T8j8/03D+P9NxPj/OIfF/zN4tv81erkAPH+7ABZ8
        vAAVd7f/QsT//0LD//9Exf//QsP//0LE//8Vd7f/MXa26DuSzv9Nwfb/TL/0/03D+P8xdrX/AAAAMwAA
        ADMYg8UAF3y//37///9Awf7/AERq/0DB/v9+////GHy//zF5uAAxdrXiPpLM/1PG+P9Txfj/L3Kw/zN3
        tf82e7j/AAAAMxmEyf8+wf7/QMT//wAtSP9Bxf//P8L+/x6EyP8yerkANHq5ADJ3tuJClM3/Xsz8/1zL
        +v9ezf3/MXOy/zJ2tP9Hot7+FYnV/xeK1f8ajdj/Go3Y/xuN1/8fjdb/Mnq5ADR7ugA0erkAM3i14kWX
        z/9n0vz/Zc/6/2XR/P9OreD/0uDw/4h2af+4v8njb46rgSEdGz+SfnH/FI7eADJ6uQA0e7oANXy6ADd8
        ugA0eLbgSZnP/3LV/f9exfj/P670/9Xz//+NhH7/oaiv/8jo//+foqX/j4aA/5SIfgAxerkANHu6ADV8
        ugA3frsANn25ADN2tP9t0f7/V732/2/U/P+v7P//wc/U/5SLhv+PhH7/lI2I/5ibn7KsrrIAMHm4ADN6
        uQA0e7kANn27ADZ9uQA1eLX/Ysr+/4Hc/v992v3/edv//7by///l////5P///9f2//+CsNf/hbTaAECH
        wQBAh8EAQIfBAECHwAA/hsAAO3+6/2/V//982v3/e9r9/27K8f9Hlsv/RZbN/2rM9f9o1f//M3q3/ziA
        uwA/iMIAP4jCAD+IwgA/iMIAP4fBADqAvP902///d9j8/3ja/v9Klsv/OHy4HTl7uB1Mmc7/dd///zx+
        uv8/hL4APYG9AD2BvQA9gb0APYG9ADyAvAA4e7j/b9P4/3PZ/P9z2v3/SpfM/wAAADMAAAAzTZvP/3PX
        +/8/grv/Qoa+AD6DvQA+g70APoO9AD6DvQA+g70APH+6gkuZzv9x2///b9j9/2bI8P9Lmc3/TZrP/2nO
        9f9PntH/QIS8gkKHvwA+hL4APoS+AD6EvgA+hL4APoS+AD2DvQA8f7rmSpnO/2fO9v9u2///b93//2nT
        +f9OntH/QIO850GGvgBCh78APoS+AD6EvgA+hL4APoS+AD6EvgA+hL4AQIS9AD6Du4I+gLr/P4C6/z+B
        uv8/grv/QIS9gkGGvgBCh78AQoe/AAeAAAADgAAAA4AAAACAAACAAAAAwAAAAOABAADwAQAA+AEAAPgB
        AAD4AQAA+AEAAPgBAAD4AQAA/AMAAP4HAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAASCwAAEgsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAADgAAABUAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABUAAAAOAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAtAAAAQAAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAA
        AEMAAABDAAAAQAAAAC0AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRJrpdQRcK7/EW+t/xFvrf8TcK7/FHGv/xRx
        r/8TcK7/EW+t/xBvrf8RcK7/EWul1AAAABUAAAAAAAAABgAAABEAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABUAAAANAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWE3Wz/0G99v9Fxf//R8b//xKa
        2P8UnNr/FJzb/xKa2f9Hxv//RMT//0zH/f8TdLL/AAAAFgAAAAAAAAARAAAAMgAAAEMAAABDAAAAQwAA
        AEMAAABDAAAAPwAAACsAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYUdrb/TML1/wuS
        0f8OlNP/EpnX/xWd3P8Vndz/E5rY/w6U0/8JkdH/X9H//xN1tf8AAAAWAAAAAAAAABYtdLX/K3Gz/ytw
        sv8rcLL/LHGy/y1ys/8udLb/LGqkxQAAACQAAAANAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhV5
        u/9Xx/X/Qr/7/0bC/f8Tm9v/AFV9/wBWfv8NisP/RsP+/0C/+v9v1v//FHe7/wAAABYAAAAAAAAAEzyN
        yP9s3v//VcTu/1/O9P9t2v//VcHq/1O/6P8vdLX/AAAARQAAACsAAAANAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAWFn3A/2TN9f8JkND/DpTT/xSd3v8ASGv/AElt/w6Jwv8OldX/B4/Q/4He//8UfL//AAAAFgAA
        AAAAAAAJLXe3/7fk9/++8v//Tbzp/1zG7/9q0/r/Vb7o/y1usf8wdLX/LGujxAAAACQAAAANAAAABAAA
        AAAAAAAAAAAAAAAAABYZgMT/b9D1/z6++v9Ewv3/EZvc/wA1UP8ANlH/C4G5/0TD//88vfr/j+T//xd+
        w/8AAAAWAAAAAAAAAAIoa6ZjJ3O2/7Lg9f+97///Tbvo/1zF8P9u1v3/XMbt/1S/6P8xdbX/AAAARQAA
        ACsAAAANAAAAAAAAAAAAAAAAAAAAFRmCyP+E3Pf/AI3Q/wSP0f8HlNb/A3u1/wN8tf8Gjs//BJDS/wCM
        0P+g7P//GIHI/wAAABUAAAAAAAAAAAAAAAIpaaVhJ3S3/7Pg9f+97///ULvo/13G8P9v1vz/Xcbt/y1v
        sv8xdrb/L26mwwAAABUAAAAAAAAAAAAAAAAAAAAPG4jO/6jv//+w9P//sfT//7P1//+09///tPf//7P2
        //+x9P//r/T//6fu//8bh83/AAAADgAAAAAAAAAAAAAAAAAAAAIpaqVhKHW3/7Tg9f+/8P//ULzo/1/H
        8P9y2Pz/X8bu/1bB6f8yd7f/AAAAJwAAABYAAAAVAAAADQAAAAgditLXFYrY/w+I2P8SiNf/F4nV/xqJ
        0/8ZidP/F4nV/xKI1/8Ph9j/FIrY/xyHzsUAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAIqa6VhKnW3/7Xh
        9v+/8P//Ubzp/2HH8f9y2f7/Ycjw/zF1tP8AAABIAAAAQwAAAD8AAAAuAAAAFAAAABqOe2//zL20/416
        bv8AAAAcAAAAAwAAAAMAAAAcjHpu/8u9s/+ein7/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIra6ZhK3a4/7Th9v+/8P//Ur3p/2LJ8f923P//LW+w/zJ0tf8zd7b/NHi3/y9qocUAAAAxAAAAJ46D
        ff/Dvbj/i4J9/wAAADIAAAAcAAAAHAAAADKKgn3/wry4/5iRjP8AAAAUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIrbKZhLHe4/7Xi9v/A8f//Vb3p/2TL8v943f//ZMnw/1e95/9awOn/TKfX/yln
        nr8AAAA9k4uE/8G+u/+cmJb/bWlmoQAAAEUAAABFa2hmoZyYlv/Avrz/kY2L/wAAAAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIsbaZhLXe4/7bi9v/C8f//Vr/q/2XK8v942v7/YsXs/1W6
        5P9avuf/SaTW/zxwobdyaWOju7a0/9DOzP+joJ//ko+M/5KPjf+joJ//0c/M/7q4t/+LiYieAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIsbaZhLni5/7ji9//C8v//Vr/q/2bK
        8v952v3/Y8Xs/1a54/9Wveb/Vqzb/7DJ4/+enZz/v7q2/+Ph3//k4eD/6efm/+Pi4P/Bvbr/l5KP5QAA
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItb6dhLnm5/7fj
        9//D8v//V7/q/2jL8v972v7/Y8Xt/1i74/9ew+z/jNn5/8Tq+/+yvsL/oZuY/56Xkv+fl5P/opuY/6qx
        t/sAAAA6AAAAGQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIub6dhL3m5/7jj9//G9P//XMHr/3va/f9w0PT/Z8jv/23P9P9v0/v/fdv//7Ds///W+P//1Pj//9D0
        ///Q8///ksXo/zV6tekAAAA3AAAAFQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIvb6dhMHq6/73l9/953P//bM70/23M8/942Pv/dtf9/8vw/v/I8f7/yfD//3HW
        /f9w1P3/bdP8/2vR+v9hyfT/T6rb/zd6suwAAAAsAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaJxlNHq5/2jE7f9uzvT/edn8/3bX/P/N8P7/d9f8/3fY
        /f932P3/TbDe/3TV+/9w0vn/b9D6/27S+v9jyvT/RZPK/zJpmaEAAAATAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUydK7iWrPg/3ra/P921/z/zfD9/3jY
        /P972P3/e9r9/1Cy3v931v3/ctT6/27Q+f9sz/j/ac74/2jP+f9WuOf/PX+5+QAAABYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFjV5tv942fz/edn+/8zx
        /f931/z/etj9/3vY/f9Rs9//eNn//3bY/v9x1f3/btH7/2rO+P9ny/f/Zcz4/2DL9/89f7n/AAAAFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWNHi2/3zd
        //942f3/zPH+/3fY/f962P3/UbPf/3na//9jvej/RpHH/0aRyP9duOf/aND7/2TL9/9hyfb/Xcr4/zx/
        uP8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABY0ebf/ner//3nZ/f/N8f7/dtf9/1Cy3v942f//Y7zo/zZ4st4ybaBFM22gRTh6st5Ztub/Ysv3/1zG
        9v9/2Pz/PoS9/wAAABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFDJ4t/+x8P//eNn8/3XW/P9Nsd7/dtb8/3TX/v9DisP/J1J5WwAAAA0AAAANKFN5W0WR
        yP9fyvn/V8X1/5Xe/f86frn/AAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAOM3m298Lr+/901/3/c9T6/3TU+/9x0/r/cNX8/0aRyP8hR2drAAAAKQAA
        ACkiSGdrRpHI/1vH+P9Sw/X/s+H4/zp/ufcAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYyda2zm8bj/53l//9t0fn/b9H5/23P+P9s0fv/XLjn/zl2
        reUfQV91IEJfdTt3r+VSsuT/U8T1/43Z+/+WwuL/OXuysgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATBqmj9BiMD/1/T//37Z/P9nzfj/Z834/2jN
        +P9nzvn/Wbbm/0WRyP9Fkcj/ULLk/1PF9v9nyvj/zO/+/0GFvv8dPFYWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzR3r5x2q9X/3vv//5jf
        /P9fyff/X8j2/17J9/9dyPf/Wsn3/1XG9/9PwfX/gdT5/9X1//9qpND/OXuynQAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTV9
        uOd0qtX/1/T+/8bw//+R2vv/dtD4/3TP9/9yzvj/itf5/8Dr///S8P7/aaPQ/zh8tK8AAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABDZ8ta1AicD/mMno/8zw///f+f//3vj//934///I6vr/ksDi/z+Evv85fraaAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAATd3rDg3fLasN366/zV9uf85hsH/NX25/zd/ufY5fretLF6HDgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//gAH//4AB//+AAQA/gAEAP4ABAA+AAQAPgAEAA4ABAAOAAYAD
        gAHAAAAB4AAAA/AAAAP4AAAD/AAAA/4AAAf/AAAD/4AAAf/AAAH/4AAB//AAAf/wAAH/8AAB//AAAf/w
        AAH/8AAB//AAAf/wAAP/+AAD//wAB//+AA///wA/
</value>
  </data>
</root>